<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.wzkris</groupId>
	<artifactId>wzkris</artifactId>
	<version>${revision}</version>

	<name>wzkris</name>
	<description>wzkris系统</description>

	<properties>
		<revision>4.1.0</revision>
		<project.encoding>UTF-8</project.encoding>
		<java.version>17</java.version>
		<spring-boot.version>3.3.0</spring-boot.version>
		<spring-cloud.version>2023.0.3</spring-cloud.version>
		<spring-cloud-alibaba.version>2023.0.1.2</spring-cloud-alibaba.version>
		<spring-statemachine.version>3.2.0</spring-statemachine.version>
		<lombok.version>1.18.28</lombok.version>
		<mysql.version>8.0.33</mysql.version>
		<netty.version>4.1.110.Final</netty.version>
		<redisson.version>3.31.0</redisson.version>
		<dynamic-ds.version>4.2.0</dynamic-ds.version>
		<hutool.version>5.8.27</hutool.version>
		<mapstruct-plus.version>1.4.6</mapstruct-plus.version>
		<mapstruct-plus.lombok.version>0.2.0</mapstruct-plus.lombok.version>
		<caffeine.version>3.1.8</caffeine.version>
		<minio.version>8.2.2</minio.version>
		<knife4j.version>4.5.0</knife4j.version>
		<transmittable-thread-local.version>2.14.2</transmittable-thread-local.version>
		<xxl-job.version>2.4.1</xxl-job.version>

		<!-- 插件版本 -->
		<maven-compiler-plugin.verison>3.11.0</maven-compiler-plugin.verison>
		<maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
		<flatten-maven-plugin.version>1.3.0</flatten-maven-plugin.version>
	</properties>

	<!-- 依赖声明 -->
	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>com.wzkris</groupId>
				<artifactId>wzkris-common-bom</artifactId>
				<version>${revision}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- SpringCloud 微服务 -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- SpringCloud Alibaba 微服务 -->
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${spring-cloud-alibaba.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- SpringBoot 依赖配置 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.statemachine</groupId>
				<artifactId>spring-statemachine-starter</artifactId>
				<version>${spring-statemachine.version}</version>
			</dependency>

			<!-- 微服务文档聚合-->
			<dependency>
				<groupId>com.github.xiaoymin</groupId>
				<artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
				<version>${knife4j.version}</version>
			</dependency>

			<!-- 微服务文档聚合-->
			<dependency>
				<groupId>com.github.xiaoymin</groupId>
				<artifactId>knife4j-gateway-spring-boot-starter</artifactId>
				<version>${knife4j.version}</version>
			</dependency>

			<!--本地缓存-->
			<dependency>
				<groupId>com.github.ben-manes.caffeine</groupId>
				<artifactId>caffeine</artifactId>
				<version>${caffeine.version}</version>
			</dependency>

			<!-- hutool工具 -->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-bom</artifactId>
				<version>${hutool.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.mapstruct/mapstruct -->
			<!--字段映射-->
			<dependency>
				<groupId>io.github.linpeilie</groupId>
				<artifactId>mapstruct-plus</artifactId>
				<version>${mapstruct-plus.version}</version>
			</dependency>

			<dependency>
				<groupId>io.github.linpeilie</groupId>
				<artifactId>mapstruct-plus-spring-boot-starter</artifactId>
				<version>${mapstruct-plus.version}</version>
			</dependency>

			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>

			<!-- Redisson所需依赖 -->
			<dependency>
				<groupId>org.redisson</groupId>
				<artifactId>redisson-spring-boot-starter</artifactId>
				<version>${redisson.version}</version>
			</dependency>

			<!-- Dynamic DataSource -->
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>dynamic-datasource-spring-boot-starter</artifactId>
				<version>${dynamic-ds.version}</version>
			</dependency>

			<!--            &lt;!&ndash; 分片策略 &ndash;&gt;-->
			<!--            <dependency>-->
			<!--                <groupId>org.apache.shardingsphere</groupId>-->
			<!--                <artifactId>shardingsphere-jdbc-core</artifactId>-->
			<!--                <version>${shardingsphere.version}</version>-->
			<!--            </dependency>-->

			<!--            &lt;!&ndash;集群策略&ndash;&gt;-->
			<!--            <dependency>-->
			<!--                <groupId>org.apache.shardingsphere</groupId>-->
			<!--                <artifactId>shardingsphere-cluster-mode-repository-zookeeper</artifactId>-->
			<!--                <version>${shardingsphere.version}</version>-->
			<!--            </dependency>-->

			<!-- 线程传递值 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>transmittable-thread-local</artifactId>
				<version>${transmittable-thread-local.version}</version>
			</dependency>

			<dependency>
				<groupId>com.xuxueli</groupId>
				<artifactId>xxl-job-core</artifactId>
				<version>${xxl-job.version}</version>
			</dependency>

			<dependency>
				<groupId>com.mysql</groupId>
				<artifactId>mysql-connector-j</artifactId>
				<version>${mysql.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/io.netty/netty-all -->
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-all</artifactId>
				<version>${netty.version}</version>
			</dependency>

			<!--认证rpc服务-->
			<dependency>
				<groupId>com.wzkris</groupId>
				<artifactId>wzkris-auth-api</artifactId>
				<version>${revision}</version>
			</dependency>

			<!--认证rpc服务-->
			<dependency>
				<groupId>com.wzkris</groupId>
				<artifactId>wzkris-user-api</artifactId>
				<version>${revision}</version>
			</dependency>

			<!--系统rpc服务-->
			<dependency>
				<groupId>com.wzkris</groupId>
				<artifactId>wzkris-system-api</artifactId>
				<version>${revision}</version>
			</dependency>

			<!--文件rpc服务-->
			<dependency>
				<groupId>com.wzkris</groupId>
				<artifactId>wzkris-file-api</artifactId>
				<version>${revision}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<modules>
		<module>wzkris-auth</module>
		<module>wzkris-gateway</module>
		<module>wzkris-extends</module>
		<module>wzkris-modules</module>
		<module>wzkris-common</module>
	</modules>
	<packaging>pom</packaging>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<!-- 环境标识，需要与配置文件的名称相对应 -->
				<profiles.active>dev</profiles.active>
				<nacos.server>localhost:8848</nacos.server>
				<nacos.username>dev</nacos.username>
				<nacos.password>nacos</nacos.password>
				<nacos.namespace>wzkris-dev</nacos.namespace>
				<nacos.group>wzkris</nacos.group>
			</properties>
			<activation>
				<!-- 默认环境 -->
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<profiles.active>prod</profiles.active>
				<nacos.server>localhost:8848</nacos.server>
				<nacos.username>prod</nacos.username>
				<nacos.password>nacos</nacos.password>
				<nacos.namespace>wzkris-prod</nacos.namespace>
				<nacos.group>wzkris</nacos.group>
			</properties>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.verison}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.encoding}</encoding>
					<annotationProcessorPaths>
						<path>
							<groupId>com.github.therapi</groupId>
							<artifactId>therapi-runtime-javadoc-scribe</artifactId>
							<version>0.15.0</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-configuration-processor</artifactId>
							<version>${spring-boot.version}</version>
						</path>
						<path>
							<groupId>io.github.linpeilie</groupId>
							<artifactId>mapstruct-plus-processor</artifactId>
							<version>${mapstruct-plus.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>${mapstruct-plus.lombok.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<arg>-parameters</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<!-- 统一版本号管理 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>${flatten-maven-plugin.version}</version>
				<configuration>
					<updatePomFile>true</updatePomFile>
					<flattenMode>resolveCiFriendliesOnly</flattenMode>
				</configuration>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<!-- 关闭过滤 -->
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/webapp/</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<!-- 引入所有 匹配文件进行过滤 -->
				<includes>
					<include>application*</include>
					<include>bootstrap*</include>
					<include>logback*</include>
				</includes>
				<!-- 启用过滤 即该资源中的变量将会被过滤器中的值替换 -->
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

	<repositories>
		<repository>
			<id>public</id>
			<name>aliyun nexus</name>
			<url>https://maven.aliyun.com/repository/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>public</id>
			<name>aliyun nexus</name>
			<url>https://maven.aliyun.com/repository/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

</project>
